// global.scss

@import "app.scss";
@import "mixin.scss";
@import "variable.scss";

// fonts
@font-face {
  font-family: "Pretendard";
  font-weight: 400;
  src: local("Pretendard"),
    url("/fonts/Pretendard-Regular.woff2") format("woff2");
}
@font-face {
  font-family: "Pretendard";
  font-weight: 500;
  src: local("Pretendard"),
    url("/fonts/Pretendard-Medium.woff2") format("woff2");
}
@font-face {
  font-family: "Pretendard";
  font-weight: 700;
  src: local("Pretendard"), url("/fonts/Pretendard-Bold.woff2") format("woff2");
}
@font-face {
  font-family: "Pretendard";
  font-weight: 900;
  src: local("Pretendard"), url("/fonts/Pretendard-Black.woff2") format("woff2");
}

:root {
  --vh: 100%;
  font-size: 62.5%;
  background: $bg-gray;
}

html,
body {
  -webkit-text-size-adjust: none;
  -moz-text-size-adjust: none;
  -ms-text-size-adjust: none;
  -o-text-size-adjust: none;
}
html {
  scroll-behavior: smooth;
}
body {
  width: 100%;
  min-height: 100vh;
  font-size: clamp(12px, 4vw, 1.6rem);
  line-height: 1.5;
  box-sizing: border-box;
  overflow-x: hidden;
}

* {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-family: "Pretendard", sans-serif;
  font-weight: 400;
  box-sizing: border-box;
}

article,
footer,
header,
nav,
section {
  display: block;
}

ul,
ol,
dl {
  list-style: none;
}

img {
  max-width: 100%;
}

a {
  text-decoration: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

input,
select {
  vertical-align: middle;
}

button {
  border: none;
  padding: 0;
  margin: 0;
  background: none;
  font: inherit;
  color: inherit;
  line-height: normal;
  cursor: pointer;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.blind {
  display: block;
  position: absolute;
  left: 1000em;
  top: 0;
  overflow: hidden;
}

// floating button
.floating-top-button {
  position: fixed;
  right: 4rem;
  bottom: 4rem;
  transition: opacity 0.3s ease;
  opacity: 0;
  pointer-events: none;
  z-index: 9;
  &.active {
    opacity: 1;
    pointer-events: auto;
  }

  .top-button {
    @include same-size(4.8rem);
    background: url("./../images/icon_top_button.svg") no-repeat center / 100%;
  }
}

// main
.main-visual {
  padding: 10rem;
  margin-top: 7.2rem;
  position: relative;
  overflow: hidden;
  height: calc(var(--vh, 1vh) * 100);
  .follow-circle-box {
    position: absolute;
    z-index: 0;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    .circle {
      position: absolute;
      width: 0;
      height: 0;
      &::before {
        display: block;
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) skew(0);
        width: 52.4375em;
        aspect-ratio: 839 / 932;
        filter: blur(50px);
        -webkit-filter: blur(50px);
        background: url("./../images/main_circle_object.svg") no-repeat center /
          100%;
        animation: 25s linear infinite normal forwards running skewCircle;
        transition: transform 0.1s ease-out;
      }
    }
  }
  .title-area {
    position: relative;
    .main-title {
      @include flexbox(center, null);
      gap: 8rem;
      * {
        font-size: clamp(56px, 8vw, 14rem);
        font-weight: 700;
      }
      .changing-words {
        position: relative;
        @include flexbox(null, center);
        gap: 1.6rem;
        &::before {
          display: inline-block;
          content: "{";
        }
        &::after {
          display: inline-block;
          content: "}";
        }
        .word-wrap {
          position: relative;
          transition: all 0.3s;
          span {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            opacity: 0;
            &.on {
              opacity: 1;
            }
          }
        }
      }
    }
  }
}
@keyframes skewCircle {
  0% {
    transform: translate(-50%, -50%) skew(0);
  }
  15% {
    transform: translate(-50%, -50%) skew(5deg, 50deg) scale(0.75);
  }
  45% {
    transform: translate(-50%, -50%) skew(0, 20deg) scale(0.9);
  }
  80% {
    transform: translate(-50%, -50%) skew(-15deg, 50deg) scale(1.025);
  }
  95% {
    transform: translate(-50%, -50%) skew(0) scale(1);
  }
}
